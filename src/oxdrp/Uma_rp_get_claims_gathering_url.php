<?php
	
	/**
	 * Gluu-oxd-library
	 *
	 * An open source application library for PHP
	 *
	 *
	 * @copyright Copyright (c) 2017, Gluu Inc. (https://gluu.org/)
	 * @license	  MIT   License            : <http://opensource.org/licenses/MIT>
	 *
	 * @package	  Oxd Library by Gluu
	 * @category  Library, Api
	 * @version   3.0.1
	 *
	 * @author    Gluu Inc.          : <https://gluu.org>
	 * @link      Oxd site           : <https://oxd.gluu.org>
	 * @link      Documentation      : <https://gluu.org/docs/oxd/3.1.1/libraries/php/>
	 * @director  Mike Schwartz      : <mike@gluu.org>
	 * @support   Support email      : <support@gluu.org>
	 * @developer Volodya Karapetyan : <https://github.com/karapetyan88> <mr.karapetyan88@gmail.com>
	 *
	 
	 *
	 * This content is released under the MIT License (MIT)
	 *
	 * Copyright (c) 2017, Gluu inc, USA, Austin
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 *
	 */

	/**
	 * UMA Requesting Party
	 * UMA RP - Get RPT class
	 *
	 * Class is connecting to oxd-server via socket, and getting RPT from gluu-server.
	 *
	 * @package		  Gluu-oxd-library
	 * @subpackage	Libraries
	 * @category	  Relying Party (RP) and User Managed Access (UMA)
	 * @see	        Client_Socket_OXD_RP
	 * @see	        Client_OXD_RP
	 * @see	        Oxd_RP_config
	 */
	
	namespace oxdrp;
	use oxdrp\Client_OXD_RP;
	
	class Uma_rp_get_claims_gathering_url extends Client_OXD_RP{
	
	    /**
	     * @var string $request_oxd_id                            This parameter you must get after registration site in gluu-server
	     */
	    private $request_oxd_id = null;
            
            /**
             * var string $request_ticket
             */
            
            private $request_ticket;
            
            /**
             * var string $request_protection_access_token
             */
            private $request_protection_access_token;
            
            /**
             * var string $request_claims_redirect_uri
             */
            private $request_claims_redirect_uri;
            
            /**
             * var string $request_claims_redirect_uri
             */
            private $response_url;
            
            /**
             * var string $request_claims_redirect_uri
             */
            private $response_state;
            
	    /**
	     * Constructor
	     *
	     * @return	void
	     */
	    public function __construct($config = null)
	    {
                if(is_array($config)){
                    Client_Socket_OXD_RP::setUrl(substr($config["host"], -1) !== '/'?$config["host"]."/".$config["uma_rp_get_claims_gathering_url"]:$config["host"].$config["uma_rp_get_claims_gathering_url"]);
                }
	        parent::__construct(); // TODO: Change the autogenerated stub
	    }
            
            function getRequest_oxd_id() {
                return $this->request_oxd_id;
            }

            function getRequest_ticket() {
                return $this->request_ticket;
            }
            
            function getRequest_protection_access_token() {
                return $this->request_protection_access_token;
            }

            function setRequest_oxd_id($request_oxd_id) {
                $this->request_oxd_id = $request_oxd_id;
            }

            function setRequest_ticket($request_ticket) {
                $this->request_ticket = $request_ticket;
            }
            
            function setRequest_protection_access_token($request_protection_access_token) {
                $this->request_protection_access_token = $request_protection_access_token;
            }
            
            function getRequest_claims_redirect_uri() {
                return $this->request_claims_redirect_uri;
            }

            function setRequest_claims_redirect_uri($request_claims_redirect_uri) {
                $this->request_claims_redirect_uri = $request_claims_redirect_uri;
            }
            
            function getResponse_url() {
                $this->response_url = $this->getResponseData()->url;
                return $this->response_url;
            }

            function getResponse_state() {
                $this->response_state = $this->getResponseData()->state;
                return $this->response_state;
            }

                        
	    /**
	     * Protocol command to oxd server
	     * @return void
	     */
	    public function setCommand()
	    {
	        $this->command = 'uma_rp_get_claims_gathering_url';
	    }
	
	    /**
	     * Protocol parameter to oxd server
	     * @return void
	     */
	    public function setParams()
	    {
	        $this->params = array(
	            "oxd_id" => $this->getRequest_oxd_id(),
	            "ticket" => $this->getRequest_ticket(),
	            "claims_redirect_uri" => $this->getRequest_claims_redirect_uri(),
	            "protection_access_token" => $this->getRequest_protection_access_token()
	        );
	    }
	
	}
