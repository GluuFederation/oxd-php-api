<?php
	
	/**
	 * Gluu-oxd-library
	 *
	 * An open source application library for PHP
	 *
	 *
	 * @copyright Copyright (c) 2017, Gluu Inc. (https://gluu.org/)
	 * @license	  MIT   License            : <http://opensource.org/licenses/MIT>
	 *
	 * @package	  Oxd Library by Gluu
	 * @category  Library, Api
	 * @version   3.1.2
	 *
	 * @author    Gluu Inc.          : <https://gluu.org>
	 * @link      Oxd site           : <https://oxd.gluu.org>
	 * @link      Documentation      : <https://gluu.org/docs/oxd/3.0.1/libraries/php/>
	 * @director  Mike Schwartz      : <mike@gluu.org>
	 * @support   Support email      : <support@gluu.org>
	 * @developer Volodya Karapetyan : <https://github.com/karapetyan88> <mr.karapetyan88@gmail.com>
	 *
	 
	 *
	 * This content is released under the MIT License (MIT)
	 *
	 * Copyright (c) 2017, Gluu inc, USA, Austin
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 *
	 */

	/**
	 * Client Uma_introspect_rpt class
	 *
	 * Class is connecting to oxd-server via socket, and doing introspection of rpt from gluu-server.
	 *
	 * @package		  Gluu-oxd-library
	 * @subpackage	Libraries
	 * @category	  Relying Party (RP) and User Managed Access (UMA)
	 * @see	        Client_Socket_OXD_RP
	 * @see	        Client_OXD_RP
	 * @see	        Oxd_RP_config
	 */
	namespace oxdrp;
	use oxdrp\Client_OXD_RP;
	
	class Uma_introspect_rpt extends Client_OXD_RP
	{
	    /**
	     * @var string $request_oxd_id                             Need to get after registration site in gluu-server
	     */
	    private $request_oxd_id = null;
	    /**
	     * @var string $request_rpt                           RPT from uma_rp_get_rpt command
	     */
	    private $request_rpt = null;
	    
            /**
	     * @var string $request_id_token
	     */
	    private $response_active = null;
            /**
	     * @var string $request_id_token
	     */
	    private $response_exp = null;
            /**
	     * @var string $request_id_token
	     */
	    private $response_iat = null;
            /**
	     * @var string $request_id_token
	     */
	    private $response_permissions = null;
            
	    /**
	     * Constructor
	     *
	     * @return	void
	     */
	    public function __construct($https_extension_config = null)
	    {
                if(is_array($https_extension_config)){
                    Client_Socket_OXD_RP::setUrl(substr($https_extension_config["host"], -1) !== '/'?$https_extension_config["host"]."/".$https_extension_config["introspect_rpt"]:$https_extension_config["host"].$https_extension_config["introspect_rpt"]);
                }
	        parent::__construct(); // TODO: Change the autogenerated stub
	    }
            /**
	     * @return string
	     */
            function getRequest_oxd_id() {
                return $this->request_oxd_id;
            }
            /**
	     * @return string
	     */
            function getRequest_rpt() {
                return $this->request_rpt;
            }
            /**
	     * @return string
	     */
            function getResponse_active() {
                $this->response_active = $this->getResponseData()->active;
                return $this->response_active;
            }
            /**
	     * @return string
	     */
            function getResponse_exp() {
                $this->response_exp = $this->getResponseData()->exp;
                return $this->response_exp;
            }
            /**
	     * @return string
	     */
            function getResponse_iat() {
                $this->response_iat = $this->getResponseData()->iat;
                return $this->response_iat;
            }
            /**
	     * @return array
	     */
            function getResponse_permissions() {
                $this->response_permissions = $this->getResponseData()->permissions;
                return $this->response_permissions;
            }
            /**
	     * @param string $request_oxd_id
	     * @return	void
	     */
            function setRequest_oxd_id($request_oxd_id) {
                $this->request_oxd_id = $request_oxd_id;
            }
            /**
	     * @param string $request_oxd_id
	     * @return	void
	     */
            function setRequest_rpt($request_rpt) {
                $this->request_rpt = $request_rpt;
            }

                        
	    /**
	     * Protocol command to oxd server
	     * @return void
	     */
	    public function setCommand()
	    {
	        $this->command = 'introspect_rpt';
	    }
	    /**
	     * Protocol parameter to oxd server
	     * @return void
	     */
	    public function setParams()
	    {
	        $this->params = array(
	            "oxd_id" => $this->getRequest_oxd_id(),
                    "rpt" => $this->getRequest_rpt()
	        );
	    }
	
	}